{"componentChunkName":"component---src-components-blog-blog-template-js","path":"/blog/take-off-with-aws-and-webiny-eng","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"slug\": \"blog/take-off-with-aws-and-webiny-eng\",\n  \"title\": \"Take Off with AWS and Hoola AI\",\n  \"description\": \"How weâ€™ve used AWS Lambda to create a MongoDB connection proxy.\",\n  \"tags\": [\"Serverless\", \"MongoDB\", \"Database\", \"Guest Blog\"],\n  \"featureImage\": \"./assets/take-off-with-aws-and-webiny-eng/Hoola AI-Zusammenarbeit.png\",\n  \"author\": \"nico\",\n  \"date\": \"2020-11-26T00:00:00.000Z\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar ExternalLink = makeShortcode(\"ExternalLink\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"beyond-mvp\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Beyond MVP\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#beyond-mvp\",\n    \"aria-label\": \"beyond mvp permalink\",\n    \"className\": \"heading-link-anchor after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"fill\": \"none\",\n    \"viewBox\": \"0 0 24 24\",\n    \"stroke\": \"currentColor\"\n  }, \"\\n                              \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\",\n    \"strokeWidth\": \"2\",\n    \"d\": \"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\"\n  }), \"\\n                            \"))), mdx(\"p\", null, \"The goal was to develop an MVP as a value-added module in the care sector in\\ncooperation with the Versicherungskammer Bayern, S-Markt & Mehrwert and \", mdx(ExternalLink, {\n    href: \"https://reha-assist.com/home\",\n    mdxType: \"ExternalLink\"\n  }, \"Reha Assist\"), \".\"), mdx(\"p\", null, \"The internet presence as part of the entire project was designed and implemented\\nby the \", mdx(ExternalLink, {\n    href: \"https://www.oev-online.de/\",\n    mdxType: \"ExternalLink\"\n  }, \"OEV\"), \". The agile way of working and the resulting requirements, which only\\nmanifested themselves over time, demanded the greatest technical flexibility.\\nIt was necessary to be able to react quickly to changing conditions at any time\\nduring the development phase. Even if it is \\u201Eonly\\u201C an MVP at first, it was important\\nfor us to choose an architecture from the outset that would still be suitable after\\nthe MVP.\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"the-cloud-was-set\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"The Cloud Was Set\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#the-cloud-was-set\",\n    \"aria-label\": \"the cloud was set permalink\",\n    \"className\": \"heading-link-anchor after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"fill\": \"none\",\n    \"viewBox\": \"0 0 24 24\",\n    \"stroke\": \"currentColor\"\n  }, \"\\n                              \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\",\n    \"strokeWidth\": \"2\",\n    \"d\": \"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\"\n  }), \"\\n                            \"))), mdx(\"p\", null, \"\\\"We knew that requirements could change at any time, that the front-end had to be\\nflexible and the content had to be easily modifiable.\\u201C said Nico Sch\\xF6nnagel, our\\nsolution architect, who has been designing and implementing applications in the AWS\\nCloud with his team for six years. What could not be predicted were the number of\\naccesses to the site and thus the resources required. For these reasons, it was\\nimmediately clear that only a cloud solution was an option.\"), mdx(\"p\", null, \"Since \\u201Eservers are somehow also from yesterday\\u201C, says Nico Sch\\xF6nnagel, a serverless\\narchitecture should be used. The AWS Cloud offers various possibilities here. Static\\ncontent should be mapped via object storage S3.\"), mdx(\"p\", null, \"The last major element of an application is the database, which should also be a\\ndatabase that does not need to be actively managed. Aurora as a serverless SQL database\\nor DynamoDB were available for selection.\"), mdx(\"div\", {\n    \"className\": \"admonition admonition-note alert alert--secondary\"\n  }, mdx(\"div\", {\n    parentName: \"div\",\n    \"className\": \"admonition-heading\"\n  }, mdx(\"h5\", {\n    parentName: \"div\"\n  }, mdx(\"span\", {\n    parentName: \"h5\",\n    \"className\": \"admonition-icon\"\n  }, mdx(\"svg\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"width\": \"14\",\n    \"height\": \"16\",\n    \"viewBox\": \"0 0 14 16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n  }))), \"S3\")), mdx(\"div\", {\n    parentName: \"div\",\n    \"className\": \"admonition-content\"\n  }, mdx(\"p\", {\n    parentName: \"div\"\n  }, \"S3 combined with CloudFront offers unlimited storage and performance.\\nContent versioning and encryption is also possible. Instead of an Apache web server,\\nan endpoint can be defined quite easily via this service. CloudFront maps the necessary\\ncaching, so that the application can be accessed with high performance regardless of\\nthe number of users.\"))), mdx(\"div\", {\n    \"className\": \"admonition admonition-note alert alert--secondary\"\n  }, mdx(\"div\", {\n    parentName: \"div\",\n    \"className\": \"admonition-heading\"\n  }, mdx(\"h5\", {\n    parentName: \"div\"\n  }, mdx(\"span\", {\n    parentName: \"h5\",\n    \"className\": \"admonition-icon\"\n  }, mdx(\"svg\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"width\": \"14\",\n    \"height\": \"16\",\n    \"viewBox\": \"0 0 14 16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n  }))), \"Lambda\")), mdx(\"div\", {\n    parentName: \"div\",\n    \"className\": \"admonition-content\"\n  }, mdx(\"p\", {\n    parentName: \"div\"\n  }, \"Lambda Services offer the possibility to implement source code in Python, nodeJS,\\nJava etc. without the need of an application server. This way developers can take\\ncare of the development without the need to manage and understand server infrastructures.\\nThe API- Gateway is the interface from the net. It allows the business logic to be\\nseparated from the interface and offers further possibilities to cache requests.\"))), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"content-management-system-cms\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Content Management System (CMS)\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#content-management-system-cms\",\n    \"aria-label\": \"content management system cms permalink\",\n    \"className\": \"heading-link-anchor after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"fill\": \"none\",\n    \"viewBox\": \"0 0 24 24\",\n    \"stroke\": \"currentColor\"\n  }, \"\\n                              \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\",\n    \"strokeWidth\": \"2\",\n    \"d\": \"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\"\n  }), \"\\n                            \"))), mdx(\"p\", null, \"The initial consideration was to develop an application on the basis of the\\narchitectural considerations itself. An Angular or React application on S3 for\\nfull flexibility and in the backend a micro service architecture with nodejs.\\nFor the management of the content a separate solution would have been used.\\nVarious CMS systems such as the top dog WordPress were available as alternatives.\\nHowever, WordPress is not serverless and has some limitations in the area of\\nflexible adjustment of the frontend. It was therefore not the right solution for\\nthe required MVP. Another alternative was Hoola AI. Hoola AI is a relatively new CMS,\\nwhich is serverless on the one hand and headless on the other. Thus this system\\nfulfilled the requirements exactly and gave the development team the possibility\\nnot to concentrate on the reproduction of a CMS system but to implement the\\nrequirements for the customers.\"), mdx(\"div\", {\n    \"className\": \"admonition admonition-note alert alert--secondary\"\n  }, mdx(\"div\", {\n    parentName: \"div\",\n    \"className\": \"admonition-heading\"\n  }, mdx(\"h5\", {\n    parentName: \"div\"\n  }, mdx(\"span\", {\n    parentName: \"h5\",\n    \"className\": \"admonition-icon\"\n  }, mdx(\"svg\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"width\": \"14\",\n    \"height\": \"16\",\n    \"viewBox\": \"0 0 14 16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n  }))), \"Headless CMS\")), mdx(\"div\", {\n    parentName: \"div\",\n    \"className\": \"admonition-content\"\n  }, mdx(\"p\", {\n    parentName: \"div\"\n  }, \"A headless CMS essentially means that the complete added value of a CMS is available, i.e. versioning, editorial backend, etc., but the GUI representation is missing. Instead, the system offers interfaces and content models that need to be operated. The advantage is that in the frontend with React, Gatsby, Vue, etc. frameworks, editors\", \"*\", \" can only fill defined content models. However, these models do not only have to be used in the web presence, but can also be used for further distribution, for example in apps or social media.\"))), mdx(\"div\", {\n    \"className\": \"admonition admonition-note alert alert--secondary\"\n  }, mdx(\"div\", {\n    parentName: \"div\",\n    \"className\": \"admonition-heading\"\n  }, mdx(\"h5\", {\n    parentName: \"div\"\n  }, mdx(\"span\", {\n    parentName: \"h5\",\n    \"className\": \"admonition-icon\"\n  }, mdx(\"svg\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"width\": \"14\",\n    \"height\": \"16\",\n    \"viewBox\": \"0 0 14 16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n  }))), \"Serverless\")), mdx(\"div\", {\n    parentName: \"div\",\n    \"className\": \"admonition-content\"\n  }, mdx(\"p\", {\n    parentName: \"div\"\n  }, \"Serverless means: without server. Of course, it doesn\\u2019t really work without sheet metal in the background, but it is encapsulated over several abstraction layers. Developers\", \"*\", \" only have to take care of the actual implementation of the source code or the database, the underlying server infrastructure itself takes care of issues such as scaling, performance or, in the example of the database, replication.\"))), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"hoola-ai\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Hoola AI\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#hoola-ai\",\n    \"aria-label\": \"hoola ai permalink\",\n    \"className\": \"heading-link-anchor after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"fill\": \"none\",\n    \"viewBox\": \"0 0 24 24\",\n    \"stroke\": \"currentColor\"\n  }, \"\\n                              \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\",\n    \"strokeWidth\": \"2\",\n    \"d\": \"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\"\n  }), \"\\n                            \"))), mdx(\"p\", null, \"Hoola AI is an OpenSource project for a headless CMS that works natively and serverless in AWS. Thus the system fulfils exactly the requirements for a modern architecture. The CMS comes with GraphQL APIs, which are used to communicate with the backend. The CMS is based on a MongoDB, but should support other databases like DynamoDB by the end of the year. The development in the frontend was done with Angular, with dynamic content retrieved via GraphQL APIs. The advantage of this is that editors only have to maintain the content in models. The design is thereby brought back to the development level (unlike with a classic CMS). On the one hand, this allows for more dynamic graphic design, on the other hand, content can be produced more quickly. When asked about the challenges of such a system, Nicolas Kumnick (Frontend Engineer) answers: \\u201EThe price for speed and simplification in maintenance is that editors no longer have the direct possibility to influence or design content through CSS or HTML injection\\u201C. It\\u2019s a new way of thinking about content that also means close collaboration between developers and designers.\"), mdx(\"p\", null, \"In the following figure the connection between content and model is shown. An element of the page is shown in the middle. The corresponding content comes from the defined models, which are shown above and below. The example of the testimonial shows that it is relatively easy to add new elements. The live page can also be found at \", mdx(ExternalLink, {\n    href: \"https://s-pflegepartner.de/home\",\n    mdxType: \"ExternalLink\"\n  }, \"s-pflegepartner\")), mdx(\"p\", null, \"![Hoola AI Page]\", \"(./assets/take-off-with-aws-and-webiny-eng/Hoola AI-Page-3.png)\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"a-b-tests\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"A-B Tests\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#a-b-tests\",\n    \"aria-label\": \"a b tests permalink\",\n    \"className\": \"heading-link-anchor after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"fill\": \"none\",\n    \"viewBox\": \"0 0 24 24\",\n    \"stroke\": \"currentColor\"\n  }, \"\\n                              \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\",\n    \"strokeWidth\": \"2\",\n    \"d\": \"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\"\n  }), \"\\n                            \"))), mdx(\"p\", null, \"The content models also enable relatively simple automated A-B testing. In this case, two or more models can be created in parallel, which can then be played out differently. This allows the UX of a website to be tested in parallel. Even better is that it is not even necessary to decide on a variant (A, B or C), but that the system can decide on the basis of defined KPIs alone which content model fits best at the moment and plays it out. This could even change over time.\"), mdx(\"p\", null, \"![Hoola AI A-B Testing]\", \"(./assets/take-off-with-aws-and-webiny-eng/Hoola AI-A-B-Testing.png)\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"adjustments-and-performance-boost-by-300-\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Adjustments and Performance Boost by 300 %\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#adjustments-and-performance-boost-by-300-\",\n    \"aria-label\": \"adjustments and performance boost by 300  permalink\",\n    \"className\": \"heading-link-anchor after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"fill\": \"none\",\n    \"viewBox\": \"0 0 24 24\",\n    \"stroke\": \"currentColor\"\n  }, \"\\n                              \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\",\n    \"strokeWidth\": \"2\",\n    \"d\": \"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\"\n  }), \"\\n                            \"))), mdx(\"p\", null, \"Essentially, our team relies on standards in development: AWS, Hoola AI and Angular in the frontend. Nevertheless, some small adjustments had to be made. For example, until the release of DynamoDB support, we use a MongoDB on an EC2 instance. The background here was that the native atlas DB should not be used outside AWS and a native document DB as a managed service in AWS is relatively expensive.\"), mdx(\"p\", null, \"Furthermore, we tightened the performance screw a bit. Basically all dynamic content is queried via the database. In a CMS, however, the dynamic content is mostly very durable, so that not every query of the content model has to go directly back to the database. The standard caching with Cloudfront did not bring any noticeable effects, because the Graph-QL requests were POST requests. With a few adjustments and the API caching we were able to solve the problem and achieve an enormous performance boost (300%).\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"conclusion\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Conclusion\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#conclusion\",\n    \"aria-label\": \"conclusion permalink\",\n    \"className\": \"heading-link-anchor after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"fill\": \"none\",\n    \"viewBox\": \"0 0 24 24\",\n    \"stroke\": \"currentColor\"\n  }, \"\\n                              \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"strokeLineCap\": \"round\",\n    \"strokeLineJoin\": \"round\",\n    \"strokeWidth\": \"2\",\n    \"d\": \"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\"\n  }), \"\\n                            \"))), mdx(\"p\", null, \"Even if it is only a matter of designing a small MVP for the time being, it is worth thinking bigger. In the example of \", mdx(ExternalLink, {\n    href: \"https://s-pflegepartner.de/home\",\n    mdxType: \"ExternalLink\"\n  }, \"s-pflegepartner\"), \", an MVP was developed whose architecture, with the use of Function as a Service (FaaS), is thought beyond the MVP.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"author":"nico","slug":"blog/take-off-with-aws-and-webiny-eng","title":"Take Off with AWS and Hoola AI","description":"How weâ€™ve used AWS Lambda to create a MongoDB connection proxy.","tags":["Serverless","MongoDB","Database","Guest Blog"],"date":"November 26, 2020","featureImage":null}}},"pageContext":{"slug":"blog/take-off-with-aws-and-webiny-eng"}},"staticQueryHashes":["144257237"]}